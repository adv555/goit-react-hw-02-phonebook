{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","Form","state","name","number","handleChange","e","currentTarget","value","console","log","props","setState","handleSubmit","preventDefault","onSubmit","reset","this","setNewValue","setContact","nameInputId","shortid","generate","numberInputId","htmlFor","type","pattern","title","required","id","onChange","Component","ContactList","contacts","onDeleteContact","className","s","contactList","map","contactListItem","text","btn","onClick","Filter","App","filter","addContact","contact","some","item","alert","deleteContact","prevState","changeFilter","getFilterContacts","normalizedFilter","toLowerCase","includes","changeFilterValue","visibleContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,gBAAkB,qCAAqC,KAAO,4B,+JCEzHC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACdC,QAAQC,IAAI,EAAKC,OAIjB,EAAKC,SAAL,eAAiBT,EAAOK,K,EAG1BK,aAAe,SAAAP,GACbA,EAAEQ,iBACFL,QAAQC,IAAI,EAAKR,OACjB,MAAyB,EAAKA,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,EAAKO,MAAMI,SAASZ,EAAMC,GAC1B,EAAKY,S,EAGPA,MAAQ,WACN,EAAKJ,SAAS,CAAET,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,MAAyBa,KAAKf,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACRc,EAAcD,KAAKZ,aACnBc,EAAaF,KAAKJ,aAClBO,EAAcC,IAAQC,WACtBC,EAAgBF,IAAQC,WAE9B,OACE,uBAAMP,SAAUI,EAAhB,UACE,wBAAOK,QAASJ,EAAhB,iBAEE,uBACEK,KAAK,OACLtB,KAAK,OACLuB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRpB,MAAOL,EACP0B,GAAIT,EACJU,SAAUZ,OAGd,wBAAOM,QAASD,EAAhB,mBAEE,uBACEE,KAAK,MACLtB,KAAK,SACLuB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRpB,MAAOJ,EACPyB,GAAIN,EACJO,SAAUZ,OAGd,wBAAQO,KAAK,SAAb,gC,GA9DWM,aAoEJ9B,I,gBC9CA+B,EAtBK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC/B,OACE,oBAAIC,UAAWC,IAAEC,YAAjB,SACGJ,EAASK,KAAI,YAA2B,IAAxBnC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQyB,EAAS,EAATA,GAC7B,OACE,qBAAIM,UAAWC,IAAEG,gBAAiBV,GAAIA,EAAtC,UACE,mBAAGM,UAAWC,IAAEI,KAAhB,SAAuBrC,IACvB,mBAAGgC,UAAWC,IAAEI,KAAhB,SAAuBpC,IACvB,wBACE+B,UAAWC,IAAEK,IACbhB,KAAK,SACLiB,QAAS,kBAAMR,EAAgBL,IAHjC,sBAH6CA,SCA1Cc,EARA,SAAC,GAAyB,IAAvBnC,EAAsB,EAAtBA,MAAOsB,EAAe,EAAfA,SACvB,OACE,wBAAON,QAAQ,GAAf,2BAEE,uBAAOC,KAAK,OAAOjB,MAAOA,EAAOsB,SAAUA,QCI3Cc,E,4MACJ1C,MAAQ,CACN+B,SAAU,CACR,CAAEJ,GAAI,OAAQ1B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEyB,GAAI,OAAQ1B,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEyB,GAAI,OAAQ1B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEyB,GAAI,OAAQ1B,KAAM,iBAAkBC,OAAQ,cAEhDyC,OAAQ,I,EAGVC,WAAa,SAAC3C,EAAMC,GAMlB,IAAM2C,EAAU,CACdlB,GAAIR,IAAQC,WACZnB,OACAC,UAEmB,EAAKF,MAAM+B,SAASe,MAAK,SAAAC,GAAI,OAAIA,EAAK9C,OAASA,KAKhE+C,MAAM,GAAD,OAAI/C,EAAJ,+BADL,EAAKS,UAAS,gBAAGqB,EAAH,EAAGA,SAAH,MAAmB,CAAEA,SAAS,CAAEc,GAAH,mBAAed,S,EAIhEkB,cAAgB,SAAAtB,GACd,EAAKjB,UAAS,SAAAwC,GAAS,MAAK,CAC1BnB,SAAUmB,EAAUnB,SAASY,QAAO,SAAAE,GAAO,OAAIA,EAAQlB,KAAOA,U,EAIlEwB,aAAe,SAAA/C,GACb,EAAKM,SAAS,CACZiC,OAAQvC,EAAEC,cAAcC,S,EAI5B8C,kBAAoB,WAClB,MAA6B,EAAKpD,MAA1B+B,EAAR,EAAQA,SACFsB,EADN,EAAkBV,OACcW,cAEhC,OAAOvB,EAASY,QAAO,SAAAE,GAAO,OAC5BA,EAAQ5C,KAAKqD,cAAcC,SAASF,O,4CAIxC,WACE,IAAMT,EAAa7B,KAAK6B,WAClBK,EAAgBlC,KAAKkC,cACnBN,EAAW5B,KAAKf,MAAhB2C,OACFa,EAAoBzC,KAAKoC,aACzBM,EAAiB1C,KAAKqC,oBAE5B,OACE,yBAASnB,UAAU,MAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACE,2CACA,cAAC,EAAD,CAAMpB,SAAU+B,OAElB,gCACE,0CACA,cAAC,EAAD,CAAQtC,MAAOqC,EAAQf,SAAU4B,IACjC,cAAC,EAAD,CACEzB,SAAU0B,EACVzB,gBAAiBiB,gB,GAtEbpB,aA+EHa,IClFfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.aced616e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\",\"contactListItem\":\"ContactList_contactListItem__1l6Fa\",\"text\":\"ContactList_text__2dM24\"};","import { Component } from 'react';\nimport shortid from 'shortid';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    console.log(this.props);\n    // console.log(this.state);\n    // console.log(name, value);\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n    const { name, number } = this.state;\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const setNewValue = this.handleChange;\n    const setContact = this.handleSubmit;\n    const nameInputId = shortid.generate();\n    const numberInputId = shortid.generate();\n\n    return (\n      <form onSubmit={setContact}>\n        <label htmlFor={nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            id={nameInputId}\n            onChange={setNewValue}\n          />\n        </label>\n        <label htmlFor={numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            id={numberInputId}\n            onChange={setNewValue}\n          />\n        </label>\n        <button type=\"submit\">add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <li className={s.contactListItem} id={id} key={id}>\n            <p className={s.text}>{name}</p>\n            <p className={s.text}>{number}</p>\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","const Filter = ({ value, onChange }) => {\n  return (\n    <label htmlFor=\"\">\n      Filter by name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\nexport default Filter;\n","// import './App.css';\nimport 'styles/shared.scss';\nimport shortid from 'shortid';\nimport { Component } from 'react';\nimport Form from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    // setTimeout(() => {\n    // console.log(name, number);\n    // }, 1000);\n    // console.log(this.state.contacts);\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    const existContact = this.state.contacts.some(item => item.name === name);\n    // console.log(existContact);\n\n    !existContact\n      ? this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }))\n      : alert(`${name} is already in the contact`);\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  getFilterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const addContact = this.addContact;\n    const deleteContact = this.deleteContact;\n    const { filter } = this.state;\n    const changeFilterValue = this.changeFilter;\n    const visibleContact = this.getFilterContacts();\n\n    return (\n      <section className=\"App\">\n        <div className=\"Container\">\n          <div className=\"AppHeader\">\n            <h1>PhoneBook</h1>\n            <Form onSubmit={addContact} />\n          </div>\n          <div>\n            <h2>Contacts</h2>\n            <Filter value={filter} onChange={changeFilterValue} />\n            <ContactList\n              contacts={visibleContact}\n              onDeleteContact={deleteContact}\n            />\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}